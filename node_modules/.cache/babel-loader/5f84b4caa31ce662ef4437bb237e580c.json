{"ast":null,"code":"var _jsxFileName = \"/Users/matthewbrockus/sei/projects/Tooly/src/components/ToolCardDetail/ToolCardDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './ToolCardDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToolCardDetail() {\n  _s();\n\n  const {\n    _id\n  } = useParams();\n  const [tool, setTool] = useState(null);\n\n  function getTool(_id) {\n    const url = `https://cryptic-dusk-16798.herokuapp.com/listing/${_id}`;\n    fetch(url).then(res => res.json()).then(res => {\n      console.log(res.reserve[0][0].year);\n      setTool(res);\n    }).catch(console.error);\n  }\n\n  useEffect(() => {\n    // This code to run when component mounts\n    getTool(_id); // console.log(_id);\n  }, [_id]);\n\n  if (!tool) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading tool information ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this);\n  } // array.map(nested => nested.map(element => element * 2));\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tool-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardDetail\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: tool.tool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: tool.image,\n        alt: tool.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: tool.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), tool.reserve.map(nested => nested.map(el => {\n        /*#__PURE__*/\n        _jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this);\n      })), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardBtns\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/update-listing/:_id\",\n          className: \"links\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"updateBtn\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/reserve-listing/${tool._id}`,\n          className: \"links\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reserveBtn\",\n            children: \"Reserve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ToolCardDetail, \"vwQxsSRBJ6IekmW0BJAAUJEq9T4=\", false, function () {\n  return [useParams];\n});\n\n_c = ToolCardDetail;\nexport default ToolCardDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToolCardDetail\");","map":{"version":3,"sources":["/Users/matthewbrockus/sei/projects/Tooly/src/components/ToolCardDetail/ToolCardDetail.js"],"names":["React","useState","useEffect","useParams","Link","axios","ToolCardDetail","_id","tool","setTool","getTool","url","fetch","then","res","json","console","log","reserve","year","catch","error","image","title","description","map","nested","el"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAUJ,SAAS,EAAzB;AAEA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;;AAEA,WAASS,OAAT,CAAiBH,GAAjB,EAAsB;AACrB,UAAMI,GAAG,GAAI,oDAAmDJ,GAAI,EAApE;AACAK,IAAAA,KAAK,CAACD,GAAD,CAAL,CACEE,IADF,CACQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADhB,EAEEF,IAFF,CAEQC,GAAD,IAAS;AACdE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkBC,IAA9B;AACAV,MAAAA,OAAO,CAACK,GAAD,CAAP;AACA,KALF,EAMEM,KANF,CAMQJ,OAAO,CAACK,KANhB;AAOA;;AAEDnB,EAAAA,SAAS,CAAC,MAAM;AACf;AACAQ,IAAAA,OAAO,CAACH,GAAD,CAAP,CAFe,CAGf;AACA,GAJQ,EAIN,CAACA,GAAD,CAJM,CAAT;;AAMA,MAAI,CAACC,IAAL,EAAW;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACA,GAxBwB,CAyBzB;;;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACC;AAAA,kBAAKA,IAAI,CAACA;AAAV;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACc,KAAf;AAAsB,QAAA,GAAG,EAAEd,IAAI,CAACe;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAA,kBAAIf,IAAI,CAACgB;AAAT;AAAA;AAAA;AAAA;AAAA,cAHD,EAWEhB,IAAI,CAACU,OAAL,CAAaO,GAAb,CAAiBC,MAAM,IAAIA,MAAM,CAACD,GAAP,CAAWE,EAAE,IAAG;AAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,OAF2B,CAA3B,CAXF,eAcC;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACC,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,sBAAT;AAAgC,UAAA,SAAS,EAAC,OAA1C;AAAA,iCACC;AAAQ,YAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,oBAAmBnB,IAAI,CAACD,GAAI,EAAvC;AAA0C,UAAA,SAAS,EAAC,OAApD;AAAA,iCACC;AAAQ,YAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cAdD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AA2BA;;GAtDQD,c;UACQH,S;;;KADRG,c;AAwDT,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './ToolCardDetail.css';\n\nfunction ToolCardDetail() {\n\tconst { _id } = useParams();\n\n\tconst [tool, setTool] = useState(null);\n\n\tfunction getTool(_id) {\n\t\tconst url = `https://cryptic-dusk-16798.herokuapp.com/listing/${_id}`;\n\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.reserve[0][0].year);\n\t\t\t\tsetTool(res);\n\t\t\t})\n\t\t\t.catch(console.error);\n\t}\n\n\tuseEffect(() => {\n\t\t// This code to run when component mounts\n\t\tgetTool(_id);\n\t\t// console.log(_id);\n\t}, [_id]);\n\n\tif (!tool) {\n\t\treturn <p>Loading tool information ...</p>;\n\t}\n\t// array.map(nested => nested.map(element => element * 2));\n\n\treturn (\n\t\t<div className='tool-card'>\n\t\t\t<div className='cardDetail'>\n\t\t\t\t<h2>{tool.tool}</h2>\n\t\t\t\t<img src={tool.image} alt={tool.title} />\n\t\t\t\t<p>{tool.description}</p>\n\t\t\t\t{/* {tool.reserve.map((date) => (\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>{date.year}</li>\n\t\t\t\t\t\t<li>{date.month}</li>\n\t\t\t\t\t\t<li>{date.date}</li>\n\t\t\t\t\t</ul>\n\t\t\t\t))} */}\n\t\t\t\t{tool.reserve.map(nested => nested.map(el =>{\n\t\t\t\t\t<p></p>\n\t\t\t\t}))}\n\t\t\t\t<div className='cardBtns'>\n\t\t\t\t\t<Link to='/update-listing/:_id' className='links'>\n\t\t\t\t\t\t<button className='updateBtn'>Update</button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to={`/reserve-listing/${tool._id}`} className='links'>\n\t\t\t\t\t\t<button className='reserveBtn'>Reserve</button>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ToolCardDetail;\n"]},"metadata":{},"sourceType":"module"}