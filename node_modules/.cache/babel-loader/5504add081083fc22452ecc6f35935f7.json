{"ast":null,"code":"var _jsxFileName = \"/Users/matthewbrockus/sei/projects/Tooly/frontend/src/components/ReserveTool/ReserveTool.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'react-modern-calendar-datepicker/lib/DatePicker.css';\nimport DatePicker, { Calendar } from 'react-modern-calendar-datepicker';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReserveTool() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [selectedDayRange, setSelectedDayRange] = useState([]);\n  const [tool, setTool] = useState({\n    tool: '',\n    brand: '',\n    model: '',\n    category: '',\n    condition: '',\n    cordless: Boolean,\n    available: Boolean,\n    location: '',\n    price: Number,\n    description: '',\n    reserve: []\n  });\n  let disabledDays = [];\n\n  function getToolInfo(id) {\n    const url = `https://cryptic-dusk-16798.herokuapp.com/listing/${id}`;\n    console.log(url);\n    fetch(url).then(res => res.json()).then(res => {\n      // console.log(res);\n      // console.log(selectedDayRange)\n      setTool(res);\n      disabledDays = res.reserve;\n    }).catch(console.error);\n    console.log(tool);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // console.log(selectedDayRange);\n    // console.log(tool.reserve)\n\n    tool.reserve.push(selectedDayRange); // console.log('reserve', tool.reserve)\n\n    axios.put(`https://cryptic-dusk-16798.herokuapp.com/listing/${id}`, tool).then(res => {\n      console.log(res);\n      navigate('/');\n    });\n  }\n\n  useEffect(() => {\n    getToolInfo(id);\n  }, []);\n\n  if (!selectedDayRange) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading tool information ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      value: selectedDayRange,\n      onChange: setSelectedDayRange,\n      disabledDays: disabledDays\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ReserveTool, \"/ygtlM+Je9wjXPWOMM2zPAswIsA=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = ReserveTool;\n;\nexport default ReserveTool; // import React, { useState } from 'react';\n// import Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\n// function ReserveTool(props) {\n//     const [date, setDate] = useState(new Date());\n//     return (\n// \t\t\t<div>\n// \t\t\t\t<label for='start'>Start date:</label>\n// \t\t\t\t<input\n// \t\t\t\t\ttype='date'\n// \t\t\t\t\tid='start'\n// \t\t\t\t\tname='trip-start'\n// \t\t\t\t\tvalue='2018-07-22'\n// \t\t\t\t\tmin='2018-01-01'\n// \t\t\t\t\tmax='2023-12-31'></input>\n// \t\t\t\t<label for='end'>End date:</label>\n// \t\t\t\t<input\n// \t\t\t\t\ttype='date'\n// \t\t\t\t\tid='end'\n// \t\t\t\t\tname='trip-end'\n// \t\t\t\t\tvalue='2018-07-22'\n// \t\t\t\t\tmin='2018-01-01'\n// \t\t\t\t\tmax='2023-12-31'></input>\n// \t\t\t\t<button>Submit</button>\n// \t\t\t\t<Calendar onChange={setDate} date={date} tileDisabled={tileDisabled} />\n// \t\t\t</div>\n// \t\t);\n// }\n// export default ReserveTool;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReserveTool\");","map":{"version":3,"sources":["/Users/matthewbrockus/sei/projects/Tooly/frontend/src/components/ReserveTool/ReserveTool.js"],"names":["React","useState","useEffect","DatePicker","Calendar","useParams","useNavigate","axios","ReserveTool","id","navigate","selectedDayRange","setSelectedDayRange","tool","setTool","brand","model","category","condition","cordless","Boolean","available","location","price","Number","description","reserve","disabledDays","getToolInfo","url","console","log","fetch","then","res","json","catch","error","handleSubmit","event","preventDefault","push","put"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'react-modern-calendar-datepicker/lib/DatePicker.css';\nimport DatePicker, { Calendar } from 'react-modern-calendar-datepicker';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction ReserveTool () {\n    const { id } = useParams();\n    const navigate = useNavigate();\n\tconst [selectedDayRange, setSelectedDayRange] = useState([]);\n    const [tool, setTool]= useState({\n        tool: '',\n        brand: '',\n        model: '',\n        category: '',\n        condition: '',\n        cordless: Boolean,\n        available: Boolean,\n        location: '',\n        price: Number,\n        description: '',\n        reserve: []\n    })\n\n    let disabledDays=[]\n\n    function getToolInfo(id) {\n            const url = `https://cryptic-dusk-16798.herokuapp.com/listing/${id}`;\n            console.log(url)\n            fetch(url)\n                .then((res) => res.json())\n                .then((res) => {\n                    // console.log(res);\n                    // console.log(selectedDayRange)\n                    setTool(res);\n                    disabledDays = res.reserve\n                })\n                .catch(console.error);\n        console.log(tool)\n        }\n    function handleSubmit(event) {\n            event.preventDefault();\n            // console.log(selectedDayRange);\n            // console.log(tool.reserve)\n            tool.reserve.push(selectedDayRange)\n            // console.log('reserve', tool.reserve)\n\n            axios\n                .put(`https://cryptic-dusk-16798.herokuapp.com/listing/${id}`, tool)\n                .then((res) => {\n                    console.log(res);\n                    navigate('/');\n                });\n\n        }\n\n\n    useEffect(() => {\n        getToolInfo(id);\n    }, []);\n\n    if (!selectedDayRange) {\n\t\t\treturn <p>Loading tool information ...</p>;\n\t\t}\n\n\treturn (\n\t\t<form>\n\t\t\t<Calendar\n\t\t\t\tvalue={selectedDayRange}\n\t\t\t\tonChange={setSelectedDayRange}\n\t\t\t\tdisabledDays={disabledDays}\n\t\t\t/>\n\t\t\t<button onClick={handleSubmit}>Submit</button>\n\t\t</form>\n\t);\n};\n\nexport default ReserveTool;\n\n// import React, { useState } from 'react';\n// import Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\n\n// function ReserveTool(props) {\n//     const [date, setDate] = useState(new Date());\n//     return (\n// \t\t\t<div>\n// \t\t\t\t<label for='start'>Start date:</label>\n\n// \t\t\t\t<input\n// \t\t\t\t\ttype='date'\n// \t\t\t\t\tid='start'\n// \t\t\t\t\tname='trip-start'\n// \t\t\t\t\tvalue='2018-07-22'\n// \t\t\t\t\tmin='2018-01-01'\n// \t\t\t\t\tmax='2023-12-31'></input>\n// \t\t\t\t<label for='end'>End date:</label>\n\n// \t\t\t\t<input\n// \t\t\t\t\ttype='date'\n// \t\t\t\t\tid='end'\n// \t\t\t\t\tname='trip-end'\n// \t\t\t\t\tvalue='2018-07-22'\n// \t\t\t\t\tmin='2018-01-01'\n// \t\t\t\t\tmax='2023-12-31'></input>\n// \t\t\t\t<button>Submit</button>\n// \t\t\t\t<Calendar onChange={setDate} date={date} tileDisabled={tileDisabled} />\n// \t\t\t</div>\n// \t\t);\n// }\n\n// export default ReserveTool;\n"]},"metadata":{},"sourceType":"module"}